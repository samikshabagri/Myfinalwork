version: '3.8'

services:
  maritime-ai:
    build: .
    container_name: maritime-ai-agent
    ports:
      - "8000:8000"  # FastAPI backend
      - "8501:8501"  # Streamlit frontend
    volumes:
      # Mount data files for easy updates
      - ./vessels.csv:/app/vessels.csv:ro
      - ./cargos.csv:/app/cargos.csv:ro
      - ./ports.csv:/app/ports.csv:ro
      - ./routes.csv:/app/routes.csv:ro
      - ./bunker_prices.csv:/app/bunker_prices.csv:ro
      - ./port_costs.csv:/app/port_costs.csv:ro
      - ./indices.csv:/app/indices.csv:ro
      - ./laytime_rates.csv:/app/laytime_rates.csv:ro
      - ./canal_fees.csv:/app/canal_fees.csv:ro
      - ./ais_tracks.csv:/app/ais_tracks.csv:ro
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: maritime-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - maritime-ai
    restart: unless-stopped
    profiles:
      - production

networks:
  default:
    name: maritime-ai-network
